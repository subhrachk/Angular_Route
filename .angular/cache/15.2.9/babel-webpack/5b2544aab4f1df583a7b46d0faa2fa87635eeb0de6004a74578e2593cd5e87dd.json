{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class NewServer {\n  constructor() {\n    this.serverCreated = new EventEmitter();\n    this.serverName = '';\n    this.serverContent = '';\n  }\n  addNewServer() {\n    this.serverCreated.emit({\n      server: {\n        newserverName: this.serverName,\n        newServerComment: this.serverContent,\n        newserverType: 'server'\n      }\n    });\n    // this.Servers.push(\n    //     {serverName : this.serverName , \n    //     serverContent : this.serverContent });\n  }\n\n  addNewBluePrint() {\n    // this.Servers.push(\n    //     {serverName : this.serverName , \n    //     serverContent : this.serverContent});\n  }\n}\nNewServer.ɵfac = function NewServer_Factory(t) {\n  return new (t || NewServer)();\n};\nNewServer.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewServer,\n  selectors: [[\"app-newserver\"]],\n  outputs: {\n    serverCreated: \"serverCreated\"\n  },\n  decls: 14,\n  vars: 2,\n  consts: [[\"for\", \"serverName\"], [\"id\", \"serverName\", \"name\", \"serveName\", 1, \"form-control\", \"col-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"serverContent\"], [\"id\", \"serverContent\", \"name\", \"serverContent\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"p-2\"], [1, \"btn\", \"btn-primary\", \"p-2\", 3, \"click\"]],\n  template: function NewServer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"label\", 0);\n      i0.ɵɵtext(3, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function NewServer_Template_input_ngModelChange_4_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 2);\n      i0.ɵɵtext(7, \"Server Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function NewServer_Template_input_ngModelChange_8_listener($event) {\n        return ctx.serverContent = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function NewServer_Template_button_click_10_listener() {\n        return ctx.addNewServer();\n      });\n      i0.ɵɵtext(11, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function NewServer_Template_button_click_12_listener() {\n        return ctx.addNewBluePrint();\n      });\n      i0.ɵɵtext(13, \"Add Server BluePrint\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverContent);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;AAQ/D,OAAM,MAAOC,SAAS;EANtBC;IAOc,kBAAa,GAAG,IAAIF,YAAY,EAGK;IAC/C,eAAU,GAAY,EAAE;IACxB,kBAAa,GAAY,EAAE;;EAG3BG,YAAY;IACR,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC;MACxBC,MAAM,EAAG;QAACC,aAAa,EAAG,IAAI,CAACC,UAAU;QAC7BC,gBAAgB,EAAG,IAAI,CAACC,aAAa;QACrCC,aAAa,EAAG;MAAQ;KAAG,CAAC;IACxC;IACA;IACA;EACJ;;EACAC,eAAe;IAEX;IACA;IACA;EAAA;;AAtBKX,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAY;EAAAC;IAAAV;EAAA;EAAAW;EAAAC;EAAAC;EAAAC;IAAA;MCRtBC,2BAAK;MAE2BA,2BAAW;MAAAA,iBAAQ;MAC3CA,gCAAiG;MAA3BA;QAAA;MAAA,EAAwB;MAA9FA,iBAAiG;MAErGA,2BAAK;MAC0BA,8BAAc;MAAAA,iBAAQ;MACjDA,gCAAkG;MAA9BA;QAAA;MAAA,EAA2B;MAA/FA,iBAAkG;MAEtGA,8BAAiB;MACuBA;QAAA,OAASC,kBAAc;MAAA,EAAC;MAACD,2BAAU;MAAAA,iBAAS;MAChFA,kCAAgE;MAA5BA;QAAA,OAASC,qBAAiB;MAAA,EAAC;MAACD,qCAAoB;MAAAA,iBAAS;;;MARvBA,eAAwB;MAAxBA,wCAAwB;MAI1BA,eAA2B;MAA3BA,2CAA2B","names":["EventEmitter","NewServer","constructor","addNewServer","serverCreated","emit","server","newserverName","serverName","newServerComment","serverContent","newserverType","addNewBluePrint","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\subhr\\Desktop\\My Project\\Angular Course\\Max_Lesson\\src\\app\\Component\\NewServer\\app.newserver.ts","C:\\Users\\subhr\\Desktop\\My Project\\Angular Course\\Max_Lesson\\src\\app\\Component\\NewServer\\app.newserver.html"],"sourcesContent":["import { Component, EventEmitter, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector : 'app-newserver',\r\n    templateUrl : './app.newserver.html',\r\n    styleUrls : ['./app.newserver.css']\r\n})\r\n\r\nexport class NewServer {\r\n    @Output() serverCreated = new EventEmitter<{server : {\r\n        newserverName : string, \r\n        newServerComment : string, \r\n        newserverType : 'server' | 'blueprint'}}>();\r\n    serverName : string = '';\r\n    serverContent : string = '';\r\n\r\n\r\n    addNewServer() {\r\n        this.serverCreated.emit({\r\n        server : {newserverName : this.serverName, \r\n                    newServerComment : this.serverContent, \r\n                    newserverType : 'server' }});\r\n        // this.Servers.push(\r\n        //     {serverName : this.serverName , \r\n        //     serverContent : this.serverContent });\r\n    }\r\n    addNewBluePrint() {\r\n        \r\n        // this.Servers.push(\r\n        //     {serverName : this.serverName , \r\n        //     serverContent : this.serverContent});\r\n    }\r\n\r\n}","<div>\r\n    <div>\r\n        <label for=\"serverName\">Server Name</label>\r\n        <input class=\"form-control col-lg-2\" id=\"serverName\" name=\"serveName\" [(ngModel)]=\"serverName\" />\r\n    </div>\r\n    <div>\r\n        <label for=\"serverContent\">Server Content</label>\r\n        <input class=\"form-control\" id=\"serverContent\" name=\"serverContent\" [(ngModel)]=\"serverContent\" />\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <button class=\"btn btn-primary p-2\" (click)=\"addNewServer()\">Add Server</button>\r\n        <button class=\"btn btn-primary p-2\" (click)=\"addNewBluePrint()\">Add Server BluePrint</button>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}