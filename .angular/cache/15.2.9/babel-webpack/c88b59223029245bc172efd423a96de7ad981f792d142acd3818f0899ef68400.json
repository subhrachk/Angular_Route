{"ast":null,"code":"export class AuthGuard {\n  constructor(authServive, router) {\n    this.authServive = authServive;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authServive.isAuthenticated().then(authenticated => {\n      if (authenticated) {\n        return true;\n      } else {\n        this.router.navigate(['/']);\n        return;\n      }\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,OAAM,MAAOA,SAAS;EAElBC,YAAoBC,WAAyB,EAAUC,MAAc;IAAjD,gBAAW,GAAXD,WAAW;IAAwB,WAAM,GAANC,MAAM;EAAW;EACxEC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IAIrE,OAAO,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,CAACC,IAAI,CAC7CC,aAAuB,IAAI;MAC5B,IAAGA,aAAa,EAAE;QAAE,OAAO,IAAI;OAAC,MAC3B;QAAC,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAAE;;IAAS,CAAC,CAC5C;EACD","names":["AuthGuard","constructor","authServive","router","canActivate","route","state","isAuthenticated","then","authenticated","navigate"],"sourceRoot":"","sources":["C:\\Users\\subhr\\Desktop\\My Project\\Angular Course\\Angular_Route\\src\\app\\auth-guard.service.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from \"rxjs\"\r\nimport { AuthService } from \"./AuthService.service\"\r\n\r\nexport class AuthGuard implements CanActivate { \r\n\r\n    constructor(private authServive : AuthService, private router :Router) {}\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \r\n    Observable<boolean> | \r\n    Promise<boolean> | \r\n    boolean { \r\n    return this.authServive.isAuthenticated().then( \r\n    (authenticated : boolean) => { \r\n    if(authenticated) { return true} \r\n    else {this.router.navigate(['/']); return;} } \r\n    ) \r\n    } \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}