{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/account.service\";\nexport class AccountComponent {\n  // @Output() statusChanged = new EventEmitter<{id: number, newStatus: string}>();\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.account = {\n      name: '',\n      status: ''\n    };\n    this.id = 0;\n    this.accounts = [];\n    this.accounts = this.accountService.accounts;\n  }\n  onSetTo(status) {\n    this.accountService.onStatusChanged({\n      id: this.id,\n      newStatus: status\n    });\n    //this.statusChanged.emit({id: this.id, newStatus: status});\n    //console.log('A server status changed, new status: ' + status);\n  }\n}\n\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n};\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  inputs: {\n    account: \"account\",\n    id: \"id\"\n  },\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"col-xs-12\", \"col-md-8\", \"col-md-offset-2\"], [1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [1, \"btn\", \"btn-outline-primary\", 3, \"click\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_7_listener() {\n        return ctx.onSetTo(\"active\");\n      });\n      i0.ɵɵtext(8, \"Set to 'active'\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_9_listener() {\n        return ctx.onSetTo(\"inactive\");\n      });\n      i0.ɵɵtext(10, \"Set to 'inactive'\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_11_listener() {\n        return ctx.onSetTo(\"unknown\");\n      });\n      i0.ɵɵtext(12, \"Set to 'unknown'\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.account.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"This account is \", ctx.account.status, \"\");\n    }\n  },\n  styles: [\".row[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  margin: 10px 0;\\n  padding: 10px 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50L0FjY291bnQvYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0VBQ3RCLGNBQWM7RUFDZCxlQUFlO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIG1hcmdpbjogMTBweCAwO1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAM5B;EAECC,YAAoBC,cAA+B;IAA/B,mBAAc,GAAdA,cAAc;IAPzB,YAAO,GAAmC;MAACC,IAAI,EAAG,EAAE;MAAEC,MAAM,EAAG;IAAE,CAAC;IAClE,OAAE,GAAW,CAAC;IAEvB,aAAQ,GAAsC,EAAE;IAK9C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,cAAc,CAACG,QAAQ;EAC9C;EAEAC,OAAO,CAACF,MAAc;IACpB,IAAI,CAACF,cAAc,CAACK,eAAe,CAAC;MAACC,EAAE,EAAC,IAAI,CAACA,EAAE;MAAEC,SAAS,EAAGL;IAAM,CAAC,CAAC;IACrE;IACA;EACF;;;AAhBWJ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAU;EAAAC;IAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCR7BC,8BAAiB;MAETA,YAAkB;MAAAA,iBAAK;MAC3BA,qBAAI;MACJA,yBAAG;MAAAA,YAAoC;MAAAA,iBAAI;MAC3CA,iCAAoE;MAA5BA;QAAA,OAASC,YAAQ,QAAQ,CAAC;MAAA,EAAC;MAACD,+BAAe;MAAAA,iBAAS;MAC5FA,iCAAqE;MAA9BA;QAAA,OAASC,YAAQ,UAAU,CAAC;MAAA,EAAC;MAACD,kCAAiB;MAAAA,iBAAS;MAC/FA,kCAAqE;MAA7BA;QAAA,OAASC,YAAQ,SAAS,CAAC;MAAA,EAAC;MAACD,iCAAgB;MAAAA,iBAAS;;;MAL1FA,eAAkB;MAAlBA,sCAAkB;MAEnBA,eAAoC;MAApCA,iEAAoC","names":["AccountComponent","constructor","accountService","name","status","accounts","onSetTo","onStatusChanged","id","newStatus","selectors","inputs","account","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Max_Lesson\\src\\app\\Component\\Account\\account.component.ts","C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Max_Lesson\\src\\app\\Component\\Account\\account.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AccountService } from '../Services/account.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent {\n  @Input() account: {name: string, status: string} = {name : '', status : ''};\n  @Input() id: number = 0;\n\n  accounts : {name: string, status: string}[] = [];\n\n // @Output() statusChanged = new EventEmitter<{id: number, newStatus: string}>();\n\n  constructor(private accountService : AccountService) {\n    this.accounts = this.accountService.accounts;\n  }\n\n  onSetTo(status: string) {\n    this.accountService.onStatusChanged({id:this.id, newStatus : status});\n    //this.statusChanged.emit({id: this.id, newStatus: status});\n    //console.log('A server status changed, new status: ' + status);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12 col-md-8 col-md-offset-2\">\n    <h5>{{ account.name }}</h5>\n    <hr>\n    <p>This account is {{ account.status }}</p>\n    <button class=\"btn btn-outline-success\" (click)=\"onSetTo('active')\">Set to 'active'</button>\n    <button class=\"btn btn-outline-danger\" (click)=\"onSetTo('inactive')\">Set to 'inactive'</button>\n    <button class=\"btn btn-outline-primary\" (click)=\"onSetTo('unknown')\">Set to 'unknown'</button>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}