{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../ServerComponent/app.servercomponent\";\nfunction Servers_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"app-servercomponent\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const server_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"Server\", server_r1);\n  }\n}\nexport class Servers {\n  constructor() {\n    this.serverName = '';\n    this.serverContent = '';\n    this.serverType = null;\n    this.Servers = [{\n      serverName: 'Test Server',\n      serverContent: 'Test Content',\n      serverType: 'server'\n    }, {\n      serverName: 'Test blueprintServer',\n      serverContent: 'Test blueprintServer',\n      serverType: 'blueprint'\n    }];\n  }\n  addServer() {\n    this.Servers.push({\n      serverName: this.serverName,\n      serverContent: this.serverContent,\n      serverType: 'server'\n    });\n  }\n  addBluePrint() {\n    this.Servers.push({\n      serverName: this.serverName,\n      serverContent: this.serverContent,\n      serverType: 'blueprint'\n    });\n  }\n}\nServers.ɵfac = function Servers_Factory(t) {\n  return new (t || Servers)();\n};\nServers.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Servers,\n  selectors: [[\"app-servers\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"col-lg-3\", \"offset-2\"], [1, \"col-lg-2\", \"offset-2\"], [\"for\", \"serverName\"], [\"id\", \"serverName\", \"name\", \"serveName\", 1, \"form-control\", \"col-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"serverContent\"], [\"id\", \"serverContent\", \"name\", \"serverContent\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"p-2\"], [1, \"btn\", \"btn-primary\", \"p-2\", 3, \"click\"], [\"class\", \"p-2\", 4, \"ngFor\", \"ngForOf\"], [3, \"Server\"]],\n  template: function Servers_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"strong\", 0);\n      i0.ɵɵtext(1, \"Add new Servers or blueprints!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\")(4, \"div\")(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function Servers_Template_input_ngModelChange_7_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Server Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function Servers_Template_input_ngModelChange_11_listener($event) {\n        return ctx.serverContent = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function Servers_Template_button_click_13_listener() {\n        return ctx.addServer();\n      });\n      i0.ɵɵtext(14, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function Servers_Template_button_click_15_listener() {\n        return ctx.addBluePrint();\n      });\n      i0.ɵɵtext(16, \"Add Server BluePrint\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(17, Servers_div_17_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverContent);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Servers);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.ServerComponent],\n  styles: [\".strong[_ngcontent-%COMP%] {\\r\\n    color : blue,\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50L1NlcnZlcnMvYXBwLnNlcnZlcnMuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5zdHJvbmcge1xyXG4gICAgY29sb3IgOiBibHVlLFxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAgBIA,8BAAgD;IAC5CA,yCAA6D;IACjEA,iBAAM;;;;IADmBA,eAAiB;IAAjBA,kCAAiB;;;ACT9C,OAAM,MAAOC,OAAO;EANpBC;IAOI,eAAU,GAAY,EAAE;IACxB,kBAAa,GAAY,EAAE;IAC3B,eAAU,GAAmC,IAAI;IACjD,YAAO,GAA0F,CAC7F;MAACC,UAAU,EAAG,aAAa;MAAGC,aAAa,EAAG,cAAc;MAAGC,UAAU,EAAG;IAAQ,CAAE,EACtF;MAACF,UAAU,EAAG,sBAAsB;MAAGC,aAAa,EAAG,sBAAsB;MAAGC,UAAU,EAAG;IAAW,CAAE,CAC7G;;EAEDC,SAAS;IACL,IAAI,CAACL,OAAO,CAACM,IAAI,CACb;MAACJ,UAAU,EAAG,IAAI,CAACA,UAAU;MAC7BC,aAAa,EAAG,IAAI,CAACA,aAAa;MAClCC,UAAU,EAAG;IAAQ,CAAE,CAAC;EAChC;EACAG,YAAY;IAER,IAAI,CAACP,OAAO,CAACM,IAAI,CACb;MAACJ,UAAU,EAAG,IAAI,CAACA,UAAU;MAC7BC,aAAa,EAAG,IAAI,CAACA,aAAa;MAClCC,UAAU,EAAG;IAAW,CAAE,CAAC;EACnC;;AArBSJ,OAAO;mBAAPA,OAAO;AAAA;AAAPA,OAAO;QAAPA,OAAO;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRpBb,iCAAkC;MAAAA,8CAA8B;MAAAA,iBAAS;MACzEA,8BAA+B;MAGKA,2BAAW;MAAAA,iBAAQ;MAC3CA,gCAAiG;MAA3BA;QAAA;MAAA,EAAwB;MAA9FA,iBAAiG;MAErGA,2BAAK;MAC0BA,+BAAc;MAAAA,iBAAQ;MACjDA,iCAAkG;MAA9BA;QAAA;MAAA,EAA2B;MAA/FA,iBAAkG;MAEtGA,+BAAiB;MACuBA;QAAA,OAASc,eAAW;MAAA,EAAC;MAACd,2BAAU;MAAAA,iBAAS;MAC7EA,kCAA6D;MAAzBA;QAAA,OAASc,kBAAc;MAAA,EAAC;MAACd,qCAAoB;MAAAA,iBAAS;MAGlGA,0DAEM;MACVA,iBAAM;;;MAd4EA,eAAwB;MAAxBA,wCAAwB;MAI1BA,eAA2B;MAA3BA,2CAA2B;MAOnEA,eAAU;MAAVA,qCAAU","names":["i0","Servers","constructor","serverName","serverContent","serverType","addServer","push","addBluePrint","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\subhr\\Desktop\\My Project\\Angular Course\\Max_Lesson\\src\\app\\Component\\Servers\\app.servers.html","C:\\Users\\subhr\\Desktop\\My Project\\Angular Course\\Max_Lesson\\src\\app\\Component\\Servers\\app.servers.ts"],"sourcesContent":["<strong class=\"col-lg-3 offset-2\">Add new Servers or blueprints!</strong>\r\n<div class=\"col-lg-2 offset-2\">\r\n    <div>\r\n        <div>\r\n            <label for=\"serverName\">Server Name</label>\r\n            <input class=\"form-control col-lg-2\" id=\"serverName\" name=\"serveName\" [(ngModel)]=\"serverName\" />\r\n        </div>\r\n        <div>\r\n            <label for=\"serverContent\">Server Content</label>\r\n            <input class=\"form-control\" id=\"serverContent\" name=\"serverContent\" [(ngModel)]=\"serverContent\" />\r\n        </div>\r\n        <div class=\"p-2\">\r\n            <button class=\"btn btn-primary p-2\" (click)=\"addServer()\">Add Server</button>\r\n            <button class=\"btn btn-primary p-2\" (click)=\"addBluePrint()\">Add Server BluePrint</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"p-2\" *ngFor=\"let server of Servers\">\r\n        <app-servercomponent [Server]=\"server\"></app-servercomponent>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector : 'app-servers',\r\n    templateUrl : './app.servers.html',\r\n    styleUrls : ['./app.servers.css']\r\n})\r\n\r\nexport class Servers {\r\n    serverName : string = '';\r\n    serverContent : string = '';\r\n    serverType : 'server' | 'blueprint' | null = null;\r\n    Servers :{serverName : string, serverContent : string , serverType : 'server' | 'blueprint'}[] = [\r\n        {serverName : 'Test Server' , serverContent : 'Test Content' , serverType : 'server' },\r\n        {serverName : 'Test blueprintServer' , serverContent : 'Test blueprintServer' , serverType : 'blueprint' },\r\n    ];\r\n\r\n    addServer() {\r\n        this.Servers.push(\r\n            {serverName : this.serverName , \r\n            serverContent : this.serverContent , \r\n            serverType : 'server' });\r\n    }\r\n    addBluePrint() {\r\n        \r\n        this.Servers.push(\r\n            {serverName : this.serverName , \r\n            serverContent : this.serverContent , \r\n            serverType : 'blueprint' });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}