{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class EditServerComponent {\n  constructor(serversService, activatedRoute) {\n    this.serversService = serversService;\n    this.activatedRoute = activatedRoute;\n    this.server = {\n      id: 0,\n      name: '',\n      status: ''\n    };\n    this.serverName = '';\n    this.serverStatus = '';\n  }\n  ngOnInit() {\n    //this.server = this.serversService.getServer(1);\n    this.activatedRoute.params.subscribe(param => {\n      console.log(param[\"id\"] | 1);\n      this.server = this.serversService.getServer(+param[\"id\"]);\n      this.serverName = this.server.name;\n      this.serverStatus = this.server.status;\n    });\n  }\n  onUpdateServer() {\n    this.serversService.updateServer(this.server.id, {\n      name: this.serverName,\n      status: this.serverStatus\n    });\n  }\n}\nEditServerComponent.ɵfac = function EditServerComponent_Factory(t) {\n  return new (t || EditServerComponent)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditServerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditServerComponent,\n  selectors: [[\"app-edit-server\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"online\"], [\"value\", \"offline\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EditServerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Server Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_select_ngModelChange_7_listener($event) {\n        return ctx.serverStatus = $event;\n      });\n      i0.ɵɵelementStart(8, \"option\", 5);\n      i0.ɵɵtext(9, \"Online\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"option\", 6);\n      i0.ɵɵtext(11, \"Offline\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function EditServerComponent_Template_button_click_12_listener() {\n        return ctx.onUpdateServer();\n      });\n      i0.ɵɵtext(13, \"Update Server\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverStatus);\n    }\n  },\n  dependencies: [i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,mBAAmB;EAK9BC,YAAoBC,cAA8B,EAC9BC,cAA+B;IAD/B,mBAAc,GAAdD,cAAc;IACd,mBAAc,GAAdC,cAAc;IALlC,WAAM,GAAe;MAACC,EAAE,EAAG,CAAC;MAAEC,IAAI,EAAG,EAAE;MAAEC,MAAM,EAAG;IAAE,CAAC;IACrD,eAAU,GAAmB,EAAE;IAC/B,iBAAY,GAAoB,EAAE;EAGqB;EAEvDC,QAAQA;IACN;IAEA,IAAI,CAACJ,cAAc,CAACK,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MAC3CC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC5B,IAAI,CAACG,MAAM,GAAG,IAAI,CAACX,cAAc,CAACY,SAAS,CAAC,CAACJ,KAAK,CAAC,IAAI,CAAC,CAAC;MACzD,IAAI,CAACK,UAAU,GAAG,IAAI,CAACF,MAAM,CAACR,IAAI;MAClC,IAAI,CAACW,YAAY,GAAG,IAAI,CAACH,MAAM,CAACP,MAAM;IACtC,CAAC,CAAC;EACN;EAEAW,cAAcA;IACZ,IAAI,CAACf,cAAc,CAACgB,YAAY,CAAC,IAAI,CAACL,MAAM,CAACT,EAAE,EAAE;MAACC,IAAI,EAAE,IAAI,CAACU,UAAU;MAAET,MAAM,EAAE,IAAI,CAACU;IAAY,CAAC,CAAC;EACtG;;AArBWhB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,8BAAwB;MACJA,2BAAW;MAAAA,iBAAQ;MACrCA,gCAI2B;MAAzBA;QAAA;MAAA,EAAwB;MAJ1BA,iBAI2B;MAE7BA,8BAAwB;MACFA,6BAAa;MAAAA,iBAAQ;MACzCA,iCAG6B;MAA3BA;QAAA;MAAA,EAA0B;MAC1BA,iCAAuB;MAAAA,sBAAM;MAAAA,iBAAS;MACtCA,kCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MAG5CA,kCAE6B;MAA3BA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MAACD,8BAAa;MAAAA,iBAAS;;;MAd/CA,eAAwB;MAAxBA,wCAAwB;MAOxBA,eAA0B;MAA1BA,0CAA0B","names":["EditServerComponent","constructor","serversService","activatedRoute","id","name","status","ngOnInit","params","subscribe","param","console","log","server","getServer","serverName","serverStatus","onUpdateServer","updateServer","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Angular_Route\\src\\app\\servers\\edit-server\\edit-server.component.ts","C:\\Users\\User\\Desktop\\My Projects\\AngularProject\\Angular_Route\\src\\app\\servers\\edit-server\\edit-server.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { ServersService, servertype } from '../servers.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-server',\n  templateUrl: './edit-server.component.html',\n  styleUrls: ['./edit-server.component.css']\n})\nexport class EditServerComponent implements OnInit {\n  server: servertype = {id : 0, name : '', status : ''};\n  serverName : string | null = '';\n  serverStatus : string | null  = '';\n\n  constructor(private serversService: ServersService,\n              private activatedRoute : ActivatedRoute) { }\n\n  ngOnInit() {\n    //this.server = this.serversService.getServer(1);\n    \n    this.activatedRoute.params.subscribe(param => {\n      console.log(param[\"id\"] | 1);\n      this.server = this.serversService.getServer(+param[\"id\"]);\n      this.serverName = this.server.name;\n      this.serverStatus = this.server.status;\n      });\n  }\n\n  onUpdateServer() {\n    this.serversService.updateServer(this.server.id, {name: this.serverName, status: this.serverStatus});\n  }\n\n}\n","<div class=\"form-group\">\n  <label for=\"name\">Server Name</label>\n  <input\n    type=\"text\"\n    id=\"name\"\n    class=\"form-control\"\n    [(ngModel)]=\"serverName\">\n</div>\n<div class=\"form-group\">\n  <label for=\"status\">Server Status</label>\n  <select\n    id=\"status\"\n    class=\"form-control\"\n    [(ngModel)]=\"serverStatus\">\n    <option value=\"online\">Online</option>\n    <option value=\"offline\">Offline</option>\n  </select>\n</div>\n<button\n  class=\"btn btn-primary\"\n  (click)=\"onUpdateServer()\">Update Server</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}